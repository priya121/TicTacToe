apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

version = '1.0'
sourceCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
    }
}

task (run, dependsOn: 'classes', type: JavaExec) {
    main = 'ttt.App'
    classpath = sourceSets.main.runtimeClasspath
}

repositories {
    mavenCentral()
}


dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.7'
    testCompile 'junit:junit:4.+'
}

test {
    testLogging {
    showStandardStreams = true
    }
}

checkstyle {
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
        configProperties = [suppressionsFile: rootProject.file('config/checkstyle/suppressions.xml')]
        toolVersion = '6.6'
}

findbugs {
    ignoreFailures = false
        toolVersion = '3.0.1'
        sourceSets = [sourceSets.main, sourceSets.test]
        reportsDir = file("$project.buildDir/reports/findbugs")
        effort = 'max'

        includeFilter = file("$rootProject.projectDir/config/findbugs/includeFilter.xml")
        excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
}

findbugsTest {
    enabled = true
}

pmd {
    ignoreFailures = true
    consoleOutput = true
        sourceSets = [sourceSets.main, sourceSets.test]
        ruleSetFiles = files("$rootProject.projectDir/config/pmd/ruleSets.xml")
        reportsDir = file("$project.buildDir/reports/pmd")
        toolVersion = '5.0.5'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        html.destination "$project.buildDir/reports/coverage"
    }
}

run {
    standardInput = System.in
}

